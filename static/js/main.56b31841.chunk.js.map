{"version":3,"sources":["components/UI/Card.js","components/Expense Filter/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Charts/ChartBar.js","components/Charts/Chart.js","components/Expenses/YearExpenseChart.js","components/Expenses/ExpensesChart.js","components/Charts/ChartDisplay.js","components/Expenses/ComponentExpense.js","components/New Expenses/NewForm.js","components/New Expenses/FormEspecifications.js","components/New Expenses/NewExpenses.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","onChange","event","optionValue","target","value","toString","onSelectOption","selected","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","expenseList","expenses","length","optionChosen","noFilter","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointsValues","dataPoints","dataPoint","totalMaximum","max","YearExpenseChart","chartDataPoints","expenseYear","getYear","ExpenseChart","getMonth","ChartDisplay","filterValue","allExpenses","ExpensesChart","NewExpenses","useState","setYear","filteredExpense","items","filter","nonFilteredExpense","yearSelected","NewForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","cancelFalse","AddNew","onAddExpense","NewExpense","isOpen","setIsOpen","mountHandler","state","callDataExpeses","random","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56b31841.chunk.js","sourcesContent":["import \"./Card.css\";\n\nconst Card = (props) => {\n  const classes = \"card-class \" + props.className;\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from \"react\";\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  const optionSelectHandler = (event) => {\n    const optionValue = event.target.value.toString();\n    props.onSelectOption(optionValue);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select onChange={optionSelectHandler} value={props.selected}>\n          <option value=\"none\">All</option>\n          <option value=\"2019\">2019</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2022\">2022</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import \"./ExpenseDate.css\";\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import React from \"react\";\nimport \"./ExpenseItem.css\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\n\nfunction ExpenseItem(props) {\n  return (\n    <div>\n      <li>\n        <Card className=\"expense-item\">\n          <ExpenseDate date={props.date} />\n          <div className=\"expense-item__description\">\n            <h2>{props.title}</h2>\n            <div className=\"expense-item__price\">${props.amount}</div>\n          </div>\n        </Card>\n      </li>\n    </div>\n  );\n}\n\nexport default ExpenseItem;\n","import React from \"react\";\nimport \"./ExpensesList.css\";\nimport ExpenseItem from \"./ExpenseItem\";\n\nconst expenseList = (props) => {\n  if (props.expenses.length === 0 && props.optionChosen !== \"none\") {\n    return <h2 className=\"expenses-list__fallback\">No expenses found.</h2>;\n  } else if (props.optionChosen === \"none\") {\n    return props.noFilter.map((expense) => (\n      <ul className=\"expenses-list\">\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      </ul>\n    ));\n  }\n\n  return (\n    <div>\n      <ul className=\"expenses-list\">\n        {props.expenses.map((expense) => (\n          <ExpenseItem\n            key={expense.id}\n            title={expense.title}\n            amount={expense.amount}\n            date={expense.date}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default expenseList;\n","import React from \"react\";\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0\";\n  if (props.maxValue > 0) {\n    barFillHeight = `${Math.round((props.value / props.maxValue) * 100)}%`;\n  }\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from \"react\";\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n  const dataPointsValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointsValues);\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport Chart from \"../Charts/Chart\";\n\nconst YearExpenseChart = (props) => {\n  const chartDataPoints = [\n    { label: \"2019\", value: 0 },\n    { label: \"2020\", value: 0 },\n    { label: \"2021\", value: 0 },\n    { label: \"2022\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseYear = expense.date.getYear();\n    if (expenseYear === 119) {\n      chartDataPoints[0].value += expense.amount;\n    } else if (expenseYear === 120) {\n      chartDataPoints[1].value += expense.amount;\n    } else if (expenseYear === 121) {\n      chartDataPoints[2].value += expense.amount;\n    } else {\n      chartDataPoints[3].value += expense.amount;\n    }\n  }\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default YearExpenseChart;\n","import React from \"react\";\nimport Chart from \"../Charts/Chart\";\n\nconst ExpenseChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpenseChart;\n","import React from \"react\";\nimport YearExpense from \"../Expenses/YearExpenseChart\";\nimport ExpensesChart from \"../Expenses/ExpensesChart\";\n\nconst ChartDisplay = (props) => {\n  if (props.filterValue === \"none\") {\n    return <YearExpense expenses={props.allExpenses} />;\n  } else {\n    return <ExpensesChart expenses={props.expenses} />;\n  }\n};\nexport default ChartDisplay;\n","/* eslint-disable eqeqeq */\nimport \"./ComponentExpense.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"../Expense Filter/ExpensesFilter\";\nimport { useState } from \"react\";\nimport ExpenseList from \"./ExpensesList\";\nimport ChartDisplay from \"../Charts/ChartDisplay\";\n\nconst NewExpenses = (props) => {\n  const [year, setYear] = useState(\"none\");\n  const filterChangeHandler = (yearSelected) => {\n    setYear(yearSelected);\n  };\n\n  const filteredExpense = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === year;\n  });\n\n  const nonFilteredExpense = [...props.items];\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter selected={year} onSelectOption={filterChangeHandler} />\n        <ChartDisplay\n          filterValue={year}\n          expenses={filteredExpense}\n          allExpenses={nonFilteredExpense}\n        />\n        <ExpenseList\n          expenses={filteredExpense}\n          optionChosen={year}\n          noFilter={nonFilteredExpense}\n        />\n      </Card>\n    </div>\n  );\n};\n\nexport default NewExpenses;\n","import \"./NewForm.css\";\nimport React, { useState } from \"react\";\n\nconst NewForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n\n  const cancelClickHandler = () => {\n    props.cancelFalse(false);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>title</label>\n          <input\n            type=\"text\"\n            onChange={titleChangeHandler}\n            value={enteredTitle}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>amount</label>\n          <input\n            type=\"number\"\n            min=\"0\"\n            step=\"0.01\"\n            onChange={amountChangeHandler}\n            value={enteredAmount}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-30\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button onClick={cancelClickHandler}>Cancel</button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewForm;\n","import React from \"react\";\nimport \"./FormEspecifications.css\";\n\nconst AddNew = (props) => {\n  const stateHandler = () => {\n    props.onAddExpense(true);\n  };\n\n  return (\n    <div>\n      <button onClick={stateHandler}>Add New Expense</button>\n    </div>\n  );\n};\n\nexport default AddNew;\n","import React, { useState } from \"react\";\nimport ExpenseForm from \"./NewForm\";\nimport \"./NewExpenses.css\";\nimport AddNew from \"./FormEspecifications\";\n\nconst NewExpense = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const saveExpenseDataHandler = (callDataExpeses) => {\n    const expenseData = {\n      id: `e${Math.round(Math.random() * 999).toString()}`,\n      ...callDataExpeses,\n    };\n    props.onAddExpense(expenseData);\n  };\n\n  const mountHandler = (state) => {\n    setIsOpen(state);\n  };\n\n  if (isOpen === true) {\n    return (\n      <div className=\"new-expense\">\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseDataHandler}\n          cancelFalse={mountHandler}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"new-expense\">\n      <AddNew onAddExpense={mountHandler} />\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/ComponentExpense\";\nimport NewExpense from \"./components/New Expenses/NewExpenses\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: \"e2\",\n    title: \"New TV\",\n    amount: 799.49,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <div>\n        <NewExpense onAddExpense={addExpenseHandler} />\n        <Expenses items={expenses} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}